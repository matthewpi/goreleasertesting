name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Release
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        go: [ "^1.17" ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # See https://github.com/actions/checkout/issues/290
    - name: Fetch Tags
      run: git fetch --tags --force

    - name: Environment
      id: env
      run: |
        printf "Go Executable Path: $(which go)\n"
        printf "Go Version: $(go version)\n"
        printf "\n\nGo Environment:\n\n"
        go env
        printf "\n\nSystem Environment:\n\n"
        env
        printf "Git Version: $(git version)\n\n"
        echo "::set-output name=version_tag::${GITHUB_REF/refs\/tags\//}"
        echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
        echo "::set-output name=go_cache::$(go env GOCACHE)"
        echo "::set-output name=go_mod_cache::$(go env GOMODCACHE)"

    - name: Validate Signatures
      run: |
        # Import Matthew's GPG Key
        curl 'https://github.com/matthewpi.gpg' | gpg --import

        echo "Verifying tag ${{ steps.env.outputs.version_tag }}"
        git verify-tag "${{ steps.env.outputs.version_tag }}" || exit 1

    - name: Go Cache
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-go${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go${{ matrix.go }}-
        path: |
          ${{ steps.env.outputs.go_cache }}
          ${{ steps.env.outputs.go_mod_cache }}

    # - name: Import GPG Key
    #   id: gpg
    #   uses: crazy-max/ghaction-import-gpg@v3
    #   with:
    #     gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    #     passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG: ${{ steps.env.outputs.version_tag }}
